<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Pulchritudinous
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/**
 * Worker configuration.
 *
 * @author Anton Samuelsson <samuelsson.anton@gmail.com>
 */
-->
<config>
    <pulchqueue>
        <worker>
            <!-- Start adding test specific configuration -->
            <!-- THESE WILL ONLY BE AVAILABLE IF DEV MODE IS ENABLED -->
            <test_expected_exception>
                <type>test</type>
                <priority>500</priority>
                <class>pulchqueue/worker_labour_test_exception</class>
            </test_expected_exception>

            <test_expected_reschedule_exception>
                <type>test</type>
                <priority>500</priority>
                <retries>1</retries>
                <reschedule>3</reschedule>
                <class>pulchqueue/worker_labour_test_reschedule_exception</class>
            </test_expected_reschedule_exception>

            <test_successful_wait_work>
                <type>test</type>
                <rule>wait</rule>
                <priority>500</priority>
                <class>pulchqueue/worker_labour_test_success</class>
            </test_successful_wait_work>

            <test_successful_batch_work>
                <type>test</type>
                <rule>batch</rule>
                <priority>500</priority>
                <class>pulchqueue/worker_labour_test_success</class>
            </test_successful_batch_work>

            <test_successful_ignore_work>
                <type>test</type>
                <rule>ignore</rule>
                <priority>500</priority>
                <class>pulchqueue/worker_labour_test_success</class>
            </test_successful_ignore_work>

            <test_successful_replace_work>
                <type>test</type>
                <rule>replace</rule>
                <priority>500</priority>
                <class>pulchqueue/worker_labour_test_success</class>
            </test_successful_replace_work>

            <test_successful_scheduled_work>
                <type>test</type>
                <rule>wait</rule>
                <priority>500</priority>
                <class>pulchqueue/worker_labour_test_success</class>
                <recurring>
                    <pattern>*/1 * * * *</pattern>
                </recurring>
            </test_successful_scheduled_work>
            <!-- End adding test specific configuration -->
        </worker>
        <worker_default>
            <priority>100</priority>
            <rule>wait</rule>
            <delay>0</delay>
            <retries>0</retries>
            <reschedule>0</reschedule>
            <logfile>pulchqueue_worker.log</logfile>
        </worker_default>
    </pulchqueue>
</config>

